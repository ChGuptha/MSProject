{"version":3,"sources":["webparts/documentListView/components/DocumentListView.tsx"],"names":[],"mappings":"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","file":"webparts/documentListView/components/DocumentListView.js","sourcesContent":["import * as React from 'react';\r\nimport styles from './DocumentListView.module.scss';\r\nimport { IDocumentListViewProps } from './IDocumentListViewProps';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\nimport {SPHttpClient, HttpClient, SPHttpClientResponse, HttpClientResponse} from '@microsoft/sp-http'\r\nimport { Web, ListEnsureResult, Item } from \"sp-pnp-js\";\r\nimport { IListItem } from \"./IListItem\";\r\nimport { InnerListItem } from \"./InnerListItem\";\r\nimport { IDocumentListViewState } from '../../../../lib/webparts/documentListView/components/IDocumentListViewState';\r\nimport importableModuleLoader from '@microsoft/sp-module-loader';\r\nimport { SPComponentLoader } from \"@microsoft/sp-loader\";\r\n\r\nexport default class DocumentListView extends React.Component<IDocumentListViewProps, IDocumentListViewState> \r\n{\r\n  items = [];\r\n  constructor(props:IDocumentListViewProps, state:IDocumentListViewState)\r\n  {    \r\n    super(props);\r\n    SPComponentLoader.loadCss('https://wallerotemp.sharepoint.com/SPFxAssets/bootstrap.min.css');    \r\n    SPComponentLoader.loadCss('https://wallerotemp.sharepoint.com/SPFxAssets/DocListView.css');    \r\n    \r\n    this.state = {\r\n        FilterVal: \"\",\r\n        FilterValItems: [],\r\n        DocumentViewItems: []\r\n    }\r\n  }\r\n  \r\n  public render(): React.ReactElement<IDocumentListViewProps> {\r\n    let that = this;\r\n    return (<div className=\"container\">\r\n    <h2>Lorem Ipsum</h2>\r\n    <p>Data platform play resources across the Partner development lifecycle</p>\r\n    <ul className=\"nav nav-tabs\">     \r\n      {this.state.FilterValItems.map((headerItems)=>\r\n          <li><a onClick={(e)=> this.rerender(this,e)}>{headerItems.Title.toUpperCase()}</a></li>\r\n      )}\r\n    </ul>\r\n    <div className=\"table-responsive\">          \r\n    <table className=\"table\" >\r\n      <thead>\r\n        <tr>\r\n          <th>RESOURCE</th>\r\n          <th>AUDIANCE</th>\r\n        </tr>\r\n      </thead>\r\n      {this.items.map((listItem, index)=>   \r\n            <tbody>\r\n              {((index ===0) || (index>0 && (listItem.Header.toUpperCase() != that.items[index-1].Header.toUpperCase()))) &&\r\n              <tr className=\"active\">\r\n                <td><b>{listItem.Header.toUpperCase()}</b></td>\r\n                <td></td>\r\n              </tr>       \r\n              }\r\n              <tr>\r\n                <td><a href={listItem.EncodedAbsUrl}>{listItem.Title}</a></td>\r\n                <td>{listItem.Audience.Title}</td>\r\n              </tr>\r\n              </tbody>\r\n            )}         \r\n    </table>\r\n    </div>\r\n  </div>\r\n    );\r\n  }\r\n  componentWillMount()\r\n  {\r\n    if(this.state.DocumentViewItems == undefined || this.state.DocumentViewItems.length<=0)\r\n    {\r\n      let filterlistitems = [];\r\n      let fieldsArr = [\"ID\",\"Title\"];\r\n      this._fetchFromSPList(this.props.filterlist, fieldsArr)\r\n      .then((items:IListItem[]) => {\r\n      filterlistitems = items;\r\n      this._getListItems(this.props.datalist)\r\n      .then((items:IListItem[]) =>\r\n      {         \r\n          this.items = items.sort((b, a)=> { if ((a.Header) > (b.Header)) { return -1; } else { return 1; } });\r\n          this.setState({\r\n            FilterValItems :filterlistitems,\r\n            DocumentViewItems: this.items\r\n          })\r\n        }\r\n      )\r\n      });\r\n    }\r\n  } \r\n  private _fetchFromSPList(listtitle, fieldsArr): Promise<IListItem[]> {\r\n    return new Promise<IListItem[]>((resolve, reject) => {\r\n        let web: Web = new Web(this.props.siteurl);                \r\n        web.lists.getByTitle(listtitle).items\r\n            .select(fieldsArr)\r\n            .get()\r\n            .then((items: IListItem[]) => {\r\n              \r\n              console.log(\"success\", items);\r\n                resolve(items);\r\n            })\r\n            .catch(error => {\r\n              \r\n                console.log(\"Error\", new Error(error));\r\n                reject(error);\r\n            });               \r\n    });\r\n  }\r\n  private _getListItems(listtitle)\r\n  { \r\n    try{return new Promise((resolve, reject) =>{  this.props.spHttpClient.get(`${this.props.siteurl}/_api/web/lists/getbytitle('Resources')/Items?$select=ID,Title,Audience/Id,Audience/Title,Filter1/Id,Filter1/Title,Header,FileRef&$orderby=Modified&$expand=Audience/Id,Audience/Title,Filter1/Id,Filter1/Title`,       SPHttpClient.configurations.v1,{headers: {'Accept': 'application/json;odata=nometadata','odata-version': ''}}).then((response: SPHttpClientResponse): Promise<{ value: IListItem[] }> => {return response.json();}).then((response: { value: IListItem[] }): void => {resolve(response.value);})});}\r\n    catch(error){console.log(error);}\r\n  }\r\n  public rerender(ctr, e)\r\n  {     \r\n    debugger;\r\n   this.items =  this.state.DocumentViewItems.filter(function (el) { return el.Filter1.Title == e.currentTarget.textContent    ; });\r\n   this.setState({\r\n    FilterVal: e.target.value\r\n   });\r\n  }\r\n \r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}